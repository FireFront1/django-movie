version: '3.3'
services:
    web:
        build:
            context: .
        command: gunicorn django_project.wsgi:application --bind 0.0.0.0:8000
        # Открываем порт 8000 наружу
        expose:
            - 8000

        # Подключаем статические и медиа файлы
        volumes:
            - static_volume:/home/app/web/static
            - media_volume:/home/app/web/media
        env_file:
            - ./.env.prod
        # Дожидаемся запуска db
        depends_on:
            - app-db
    app-db:
        image: postgres:14
        ports:
            - "5432:5432"
        restart: always
        volumes:
            - postgres_data:/var/lib/postgresql/data:rw
        env_file:
            - ./.env.prod
    nginx:
        build: ./nginx
        restart: always
        # Подключаем статические и медиа файлы
        volumes:
            - static_volume:/home/app/web/static
            - media_volume:/home/app/web/media
        ports:
            - 80:80
        depends_on:
            - web
        networks:
            - nginx_network
    redis:
        image: redis:latest
        hostname: redis
        ports:
            - "0.0.0.0:6379:6379"
        env_file:
            - ./.env.prod
    celeryworker:
        build: .
        depends_on:
            - redis
            - app-db
        command: "celery -A django_movie worker -l info"
    celery-beat:
        build: .
        depends_on:
            - redis
            - app-db
        command: "celery -A django_movie beat -l info"
    celery-flower:
        build: .
        depends_on:
            - redis
        command: "celery -A django_movie flower --basic_auth=test_user:password_user"

networks:
  nginx_network:
    driver: bridge
  db_network:
    driver: bridge
volumes:
    media_volume:
    static_volume:
    postgres_data: